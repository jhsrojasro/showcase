<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://jhsrojasro.github.io/showcase/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jhsrojasro.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://jhsrojasro.github.io/showcase/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://jhsrojasro.github.io/showcase/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://jhsrojasro.github.io/showcase/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://jhsrojasro.github.io/showcase/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/integrantes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/integrantes/</guid><description>Integrantes: # Hamed Mohseni Intereses Académicos: Desarrollo Web, Redes de computadores Pasatiempos: Futbol, Tenis de mesa, Trabajar Jhon Sebastian Rojas Rodriguez Intereses Académicos: Reinforcement Learning Pasatiempos: Tenis de Mesa, Música Clásica Vladimir Vargas Diaz Intereses Académicos: Desarrollo Web, Inteligencia Artificial Pasatiempos: Videojuegos, Billar, Ping pong</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/logs/</guid><description>LOGS # 30 Marzo: Definición tema del taller # Tema del taller Análisis de imagenes usando redes convolucionales. Se puede utilizar cualquier tecnología. Recomendaciones: Visualización en una página web, vincularlo con un fenómeno visual. Hardware (Placa). Comentarios: Muy interesante. Espera ver resultados para ver en la clase.</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/BodyPrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/BodyPrix/</guid><description>BodyPrix with Webcam Demos # Bodypix is an open-source machine learning model which allows for person and body-part segmentation in the browser with TensorFlow.js.
https://learn.ml5js.org/#/reference/bodypix
Código del sketch // Copyright (c) 2020 ml5 // // This software is released under the MIT License. // https://opensource.org/licenses/MIT /* === ml5 Example BodyPix === */ let bodypix; let video; let segmentation; const options = { outputStride: 8, // 8, 16, or 32, default is 16 segmentationThreshold: 0.</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/FaceMesh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/FaceMesh/</guid><description>Facemesh with Webcam Demo # Facemesh is a machine-learning model that allows for facial landmark detection in the browser. It can detect multiple faces at once and provides 486 3D facial landmarks that describe the geometry of each face. Facemesh works best when the faces in view take up a large percentage of the image or video frame and it may struggle with small/distant faces.
https://learn.ml5js.org/#/reference/facemesh</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/HandPose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/HandPose/</guid><description>Handpose with Webcam Demo # Handpose is a machine-learning model that allows for palm detection and hand-skeleton finger tracking in the browser. It can detect a maximum of one hand at a time and provides 21 3D hand keypoints that describe important locations on the palm and fingers.
https://learn.ml5js.org/#/reference/handpose
Código del sketch let handpose; let video; let hands = []; function setup() { canvas = createCanvas(640, 480); canvas.</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/image-classification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/image-classification/</guid><description>Image classification using MobileNet and p5.js # You can use neural networks to recognize the content of images. ml5.imageClassifier() is a method to create an object that classifies an image using a pre-trained model.
It should be noted that the pre-trained model provided by the example below was trained on a database of approximately 15 million images (ImageNet). The ml5 library accesses this model from the cloud. What the algorithm labels an image is entirely dependent on that training data &amp;ndash; what is included, excluded, and how those images are labeled (or mislabeled).</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/PoseNet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/ml5/PoseNet/</guid><description>PoseNet example using p5.js # PoseNet is a machine learning model that allows for Real-time Human Pose Estimation.
PoseNet can be used to estimate either a single pose or multiple poses, meaning there is a version of the algorithm that can detect only one person in an image/video and one version that can detect multiple persons in an image/video.
https://learn.ml5js.org/#/reference/posenet
Código del sketch // Copyright (c) 2019 ml5 // // This software is released under the MIT License.</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/p5/div/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/p5/div/</guid><description>p5 div shortcodes embed p5.js code within a div element. There are two p5 div shortcodes: p5-div and p5-instance-div.
p5-div # {{&amp;lt; p5-div ver=&amp;#34;1.4.1&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Scintillating grid # Look at this and also this among many more references there are.
p5-div markdown {{&amp;lt; p5-div sketch=&amp;#34;/showcase/sketches/scintillating.</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/p5/iframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/p5/iframe/</guid><description>p5 iframe shortcodes embed p5.js code within an iframe element. There are two p5 iframe shortcodes: p5-iframe and p5-global-iframe.
p5-iframe # {{&amp;lt; p5-iframe ver=&amp;#34;1.4.1&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;600&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Color relativity # Look at this brief explanation about what color relativity is.
p5-iframe markdown {{&amp;lt; p5-iframe sketch=&amp;#34;/showcase/sketches/colors.</description></item><item><title/><link>https://jhsrojasro.github.io/showcase/docs/shortcodes/workshop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jhsrojasro.github.io/showcase/docs/shortcodes/workshop/</guid><description>Workshop #1 # Convolutional Neural Networks: # Aplicación de redes neuronales para clasificar imagenes segun el clima.
Introducción # Red neuronal convolucional (Convolutional Neural Network) # Es un algoritmo de aprendizaje profundo que toma como entrada una imagen, asigna importancia a varios aspectos u objetos de la misma y los diferencia. Lo consigue a través de la aplicación de filtros relevantes. La arquitectura de una CNN es análoga a los patrones de conectividad de neuronas del cerebro humano y fue inspirada en la organización de la corteza visual.</description></item></channel></rss>